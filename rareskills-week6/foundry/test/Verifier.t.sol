// SPDX-License-Identifier: UNLICENSED
pragma solidity >=0.8.21;

import { Test, console2 } from "forge-std/Test.sol";
import { Verifier } from "../src/Verifier.sol";

contract VerifierTest is Test {
  Verifier public verifier;

  function setUp() public {
    verifier = new Verifier();
  }

  function testVerifyR1CS() public view {
    // points A1, B2, C1
    Verifier.G1Point memory A = Verifier.G1Point(15387556283563092922147185796758357722550792925301477170451314548568391338796, 15250559282479544682167861637629732857346619659084250003252853504693830172718);
    Verifier.G2Point memory B = Verifier.G2Point([6167204071538902108280132162091841216699863844593939977859351025434657866697, 10654958036448339311759823138903045302178963690971684858442021673714880705895], [2846885238213882374354500679374471989452326995649780016003015170460826664803, 592082727377353332748275442455886046662715174810441158367449591364550115607]);
    Verifier.G1Point memory C = Verifier.G1Point(11798602991279294198327789481484191219689789447071083490565021338775522303276, 4476854357751744416024406190837691503970817993123486634862585038996734818345);

    bool x = verifier.pairing(A, B, C);
    console2.log("result of pairing", x);
  }
}
