// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/Pairings.sol";

contract PairingsTest is Test {
    Pairings public pairings;

    function setUp() public {
        pairings = new Pairings();
    }

    // pairing(G2, neg(G1)) + pairing(G2,G1) = 0
    // e(G1,G2)^-1 + e(G1,G2)^1 = 0
    // -1 + 1 = 0
    function testEasy2Pairing() public view {
        // neg(G1)
        uint256 aG1_x = 1;
        uint256 aG1_y = 21888242871839275222246405745257275088696311157297823662689037894645226208581;

        // G2
        uint256 bG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 bG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 bG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 bG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        // G1
        uint256 cG1_x = 1;
        uint256 cG1_y = 2;

        // G2
        uint256 dG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 dG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 dG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 dG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        uint256[12] memory points =
            [aG1_x, aG1_y, bG2_x2, bG2_x1, bG2_y2, bG2_y1, cG1_x, cG1_y, dG2_x2, dG2_x1, dG2_y2, dG2_y1];

        bool x = pairings.run(points);
        console2.log("result:", x);
    }

    // pairing(multiply(neg(G1), 10),multiply(G2,5)) == pairing(multiply(G1,25),multiply(G2,2))
    // e(G1,G2)^(-10*5) + e(G1,G2)^(25*2) = 0
    // -50 + 50 = 0
    function testHard2Pairing() public view {
        // multiply(neg(G1), 10)
        uint256 aG1_x = 4444740815889402603535294170722302758225367627362056425101568584910268024244;
        uint256 aG1_y = 11350979775309792057627585728092606167309854128733159954336302813744955667163;

        // multiply(G2,5)
        uint256 bG2_x1 = 20954117799226682825035885491234530437475518021362091509513177301640194298072;
        uint256 bG2_x2 = 4540444681147253467785307942530223364530218361853237193970751657229138047649;
        uint256 bG2_y1 = 21508930868448350162258892668132814424284302804699005394342512102884055673846;
        uint256 bG2_y2 = 11631839690097995216017572651900167465857396346217730511548857041925508482915;

        // multiply(G1,25)
        uint256 cG1_x = 20765039372871530718554589730410158162413780974122112544611863764810626751360;
        uint256 cG1_y = 2444183914824638066910831265243126275246160293098948571390980460351548298384;

        // multiply(G2,2)
        uint256 dG2_x1 = 18029695676650738226693292988307914797657423701064905010927197838374790804409;
        uint256 dG2_x2 = 14583779054894525174450323658765874724019480979794335525732096752006891875705;
        uint256 dG2_y1 = 2140229616977736810657479771656733941598412651537078903776637920509952744750;
        uint256 dG2_y2 = 11474861747383700316476719153975578001603231366361248090558603872215261634898;

        uint256[12] memory points =
            [aG1_x, aG1_y, bG2_x2, bG2_x1, bG2_y2, bG2_y1, cG1_x, cG1_y, dG2_x2, dG2_x1, dG2_y2, dG2_y1];

        bool x = pairings.run(points);
        console2.log("result:", x);
    }

    // e(G1,G2)^(-10*5) + e(G1,G2)^(10) + e(G1,G2)^(40) = 0
    // pairing(multiply(neg(G1), 10),multiply(G2,5))
    // pairing(multiply(G1,10),G2) = e(G1,G2)^(10)
    // pairing(multiply(G1,40),G2) = e(G1,G2)^(40)
    function testEasy3Pairing() public view {
        // multiply(neg(G1), 10)
        uint256 aG1_x = 4444740815889402603535294170722302758225367627362056425101568584910268024244;
        uint256 aG1_y = 10537263096529483164618820017164668921386457028564663708352735080900270541420;

        // multiply(G2,5)
        uint256 bG2_x1 = 20954117799226682825035885491234530437475518021362091509513177301640194298072;
        uint256 bG2_x2 = 4540444681147253467785307942530223364530218361853237193970751657229138047649;
        uint256 bG2_y1 = 21508930868448350162258892668132814424284302804699005394342512102884055673846;
        uint256 bG2_y2 = 11631839690097995216017572651900167465857396346217730511548857041925508482915;

        // multiply(G1,10)
        uint256 cG1_x = 4444740815889402603535294170722302758225367627362056425101568584910268024244;
        uint256 cG1_y = 10537263096529483164618820017164668921386457028564663708352735080900270541420;

        // G2
        uint256 dG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 dG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 dG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 dG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        // G1 * 40
        uint256 eG1_x = 20003165157599505724822627051277038367118176092311529681748895592930988869629;
        uint256 eG1_y = 19521843329763029480438735371451116678177931327248380146196642919230980579494;

        // G2
        uint256 fG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 fG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 fG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 fG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        uint256[18] memory points = [
            aG1_x,
            aG1_y,
            bG2_x2,
            bG2_x1,
            bG2_y2,
            bG2_y1,
            cG1_x,
            cG1_y,
            dG2_x2,
            dG2_x1,
            dG2_y2,
            dG2_y1,
            eG1_x,
            eG1_y,
            fG2_x1,
            fG2_x2,
            fG2_y1,
            fG2_y2
        ];

        bool x = pairings.run3(points);
        console2.log("result:", x);
    }

    function testEasyPairingWithBytes() public view {
        // neg(G1)
        uint256 aG1_x = 1;
        uint256 aG1_y = 21888242871839275222246405745257275088696311157297823662689037894645226208581;

        // G2
        uint256 bG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 bG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 bG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 bG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        // G1
        uint256 cG1_x = 1;
        uint256 cG1_y = 2;

        // G2
        uint256 dG2_x1 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
        uint256 dG2_x2 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
        uint256 dG2_y1 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
        uint256 dG2_y2 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;

        bytes memory points2 =
            abi.encode(aG1_x, aG1_y, bG2_x2, bG2_x1, bG2_y2, bG2_y1, cG1_x, cG1_y, dG2_x2, dG2_x1, dG2_y2, dG2_y1);

        bool x = pairings.run2(points2);
        console2.log("result:", x);
    }
}
